<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><id>/Blog-With-GitHub-Boilerplate/</id><title>CLD's BLOG</title><updated>2020-01-04T12:07:34.823535+08:06</updated><author><name>CLD</name><email>hi@imalan.cn</email></author><link href="/Blog-With-GitHub-Boilerplate/" rel="alternate"/><generator uri="http://lkiesow.github.io/python-feedgen" version="0.8.0">python-feedgen</generator><logo>${static_prefix}logo.png</logo><subtitle>test des</subtitle><entry><id>/Blog-With-GitHub-Boilerplate/archives/math/</id><title>group</title><updated>2020-01-04T12:07:34.823701+00:00</updated><author><name>CLD</name><email>hi@imalan.cn</email><uri>https://www.imalan.cn</uri></author><content>&lt;p&gt;--一个集合加上一个运算规则就是一个代数结构.&lt;/p&gt;
&lt;h4&gt;合成法则&lt;/h4&gt;
&lt;p&gt;集合$S$上的一个&lt;strong&gt;合成法则&lt;/strong&gt;（又称二元运算） $F$ 是指一个映射：&lt;/p&gt;
&lt;p&gt;​       $ S \times S \rightarrow S$&lt;/p&gt;
&lt;p&gt;$S\times S$为$S$与$S$的&lt;strong&gt;笛卡尔积&lt;/strong&gt;，其中的元素为有序对$(a,b):a,b\in S$&lt;/p&gt;
&lt;p&gt;即把 $S$ 中的元素 $a,b$ 变换成 $S$ 中的另外一个元素.&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;一个合成法则作用在元素对$(a,b)$上的结果通常用$ab,a\times b,a+b,a \circ b$表示.&lt;/p&gt;
&lt;p&gt;（任何采用某种记号的结果都可以以另一种记号改写）&lt;/p&gt;
&lt;p&gt;通常先求值括号里的表达式.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;合成法则的&lt;strong&gt;结合律&lt;/strong&gt;是指：&lt;/p&gt;
&lt;p&gt;​       $(ab)c = a(bc)$&lt;/p&gt;
&lt;p&gt;合成法则的&lt;strong&gt;交换律&lt;/strong&gt;是指：&lt;/p&gt;
&lt;p&gt;​       $ab = ba$&lt;/p&gt;
&lt;h4&gt;【2.1.1】命题：&lt;/h4&gt;
&lt;p&gt;若集合$S$上的合成法则&lt;strong&gt;满足结合率&lt;/strong&gt;，则有唯一一种方式来定义$S$中任意$n$个元素&lt;/p&gt;
&lt;p&gt;​       $a_1,a_2,\dots,a_n$&lt;/p&gt;
&lt;p&gt;的乘积，暂时记作$[a_1a_2\dots a_n]$，&lt;/p&gt;
&lt;p&gt;（即$S$中$n$个元素乘积的结果与加括号的次序无关）&lt;/p&gt;
&lt;p&gt;这个乘积有以下性质：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;$(i)$：一个元素的乘积是其自身：$[a_1]=a_1$.&lt;/p&gt;
&lt;p&gt;$(ii)$：两个元素的积$[a_1a_2]$由合成法则给出.&lt;/p&gt;
&lt;p&gt;$(iii)$：对于任意整数$i$：$1\leqslant i &lt; n$，有&lt;/p&gt;
&lt;p&gt;​      $[a_1,a_2\dots a_n] = [a_1\dots a_i][a_{i+1}\dots a_n].$&lt;/p&gt;
&lt;p&gt;（补充说明：等号右边是先计算出$q=[a_1\dots a_i]$，$p=[a_{i+1}\dots a_n]$，再按合成法则计算$pq$）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;证明：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;对$n$用数学归纳法.&lt;/p&gt;
&lt;p&gt;$(i),(ii)$已定义$n\leqslant 2$时的乘积.&lt;/p&gt;
&lt;p&gt;$n=2$时$(iii)$成立.&lt;/p&gt;
&lt;p&gt;假设对于所有$r\leqslant n-1,r\in Z^{+}$已经定义了$r$个元素的乘积，且乘积是唯一的并满足$(iii)$，&lt;/p&gt;
&lt;p&gt;按照$[a_1\dots a_n] = [a_1\dots a_{n-1}][a_n]$定义$n$个元素的乘积.&lt;/p&gt;
&lt;p&gt;对于$i&lt;n-1,i\in Z^{+}$
qwqqqqq
$$
\begin{align&lt;em&gt;}
[a_1 \dots a_n] &amp;amp;= [a&lt;em&gt;1 \dots a&lt;/em&gt;{n-1}][a_n] \
&amp;amp;= ([a_1 \dots a&lt;em&gt;i][a&lt;/em&gt;{i+1} \dots a_{n-1}])[a_n] \
&amp;amp;= &lt;a href="[a_{i+1} \dots a_{n-1}][a_n]"&gt;a_1 \dots a_i&lt;/a&gt; \
&amp;amp;= [a_1 \dots a&lt;em&gt;i][a&lt;/em&gt;{i+1} \dots a_n]
\end{align&lt;/em&gt;}
$$
故$(iii)$对于$n$成立.&lt;/p&gt;
&lt;p&gt;证毕.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;test_LATEX&lt;/p&gt;
&lt;p&gt;现在起表示乘积（只用于有结合率的合成法则）直接记作$a_1\dots a_n$.&lt;/p&gt;
&lt;p&gt;元素$e\in S$称为（$S$上的）合成法则的&lt;strong&gt;恒等元&lt;/strong&gt;，若$e$满足&lt;/p&gt;
&lt;p&gt;​       对任意$a\in S$，$ea = a = ae$&lt;/p&gt;
&lt;p&gt;（$e$在合成法则为乘法时通常记为$1$，在合成法则为加法时通常记为$0$）&lt;/p&gt;
&lt;p&gt;若$S$上有一个&lt;strong&gt;满足结合率&lt;/strong&gt;且有恒等元$1$的合成法则（记作乘法），&lt;/p&gt;
&lt;p&gt;$a\in  S$是可逆的，若有$b \in S$使得&lt;/p&gt;
&lt;p&gt;​       $ab=1$ 与 $ba=1$&lt;/p&gt;
&lt;p&gt;如果上式成立，则$b$称为$a$的&lt;strong&gt;逆&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;逆的性质&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果$a$有左逆$l$与右逆$r$，即$la=1$与$ar=1$，则$l=r$，$a$是可逆的，且$r$是$a$的逆.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若$a$是可逆的，则其逆是唯一的.（所以可以把元素$a$的逆记为$a^{-1}$或$-a$）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;若$a,b$均可逆，则乘积$ab$可逆，且&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​               $(ab)^{-1} = b^{-1}a^{-1}$.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一个不可逆的元素$a$可以有左逆或右逆.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;幂记号：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于$n\in Z^+$，$a^n = \underbrace{a\dots a}_{n个a}$，$a^{-n} = a^{-1}\dots a^{-1} = (a^n)^{-1}$.&lt;/li&gt;
&lt;li&gt;幂运算律（$a^r a^s = a^{r+s},(a^r)^s=a^{rs}$）成立.&lt;/li&gt;
&lt;li&gt;合成法则为加法时，幂运算记号$a^n$通常改为$na = \underbrace{a+\dots + a}_{n个a}$&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;群 与 子群&lt;/h4&gt;
&lt;p&gt;一个&lt;strong&gt;群&lt;/strong&gt;是一个&lt;/p&gt;
</content><link href="/Blog-With-GitHub-Boilerplate/archives/math/" rel="alternate"/><published>2017-06-28T17:26:00+08:06</published></entry><entry><id>/Blog-With-GitHub-Boilerplate/archives/194/</id><title>Overview of Maverick</title><updated>2020-01-04T12:07:34.823673+00:00</updated><author><name>AlanDecode</name><email>hi@imalan.cn</email><uri>https://www.imalan.cn</uri></author><content>&lt;h2&gt;Overview&lt;/h2&gt;
&lt;p&gt;Maverick is a static blog generator built with python. Like Hexo and Jekyll, it takes Markdown(&lt;code&gt;.md&lt;/code&gt;) files as input, and output beautifully formated and well structured website pages(&lt;code&gt;.html&lt;/code&gt;). It has a lot built-in useful features(feed, search, sitemap, etc.), with extended Markdown syntax and enhanced image processing pipeline.&lt;/p&gt;
&lt;p&gt;If you are tired of intricate plugins and complicated configurations, just give Maverick a try. You focus on writing, let Maverick take care of the rest.&lt;/p&gt;
&lt;p&gt;Pull requests are surely welcome. If you have any questions or suggestions, please head to &lt;a href="https://github.com/AlanDecode/Maverick/issues"&gt;issue area&lt;/a&gt; and leave us a message. Before that, let's finish this document.&lt;/p&gt;
&lt;h2&gt;Usage&lt;/h2&gt;
&lt;p&gt;Maverick is build with modern Python, currently at least &lt;strong&gt;Python 3.5&lt;/strong&gt; is required, make sure you have it installed on your machine.&lt;/p&gt;
&lt;h3&gt;Install&lt;/h3&gt;
&lt;p&gt;Clone this repository:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;git clone https://github.com/AlanDecode/Maverick.git ./Maveric &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ./Maveric
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install all dependencies:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pip install -r prod_req.txt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If error occurs, please verify your Python and pip version. Then get a copy of sample config file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cp ./config.sample.py ./config.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For now let's use the default configurations. Type this command in your terminal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;python ./build.py
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;...and a sample static site is generated in &lt;code&gt;test_dist&lt;/code&gt; folder! You can then upload them to GitHub Pages or any other server.&lt;/p&gt;
&lt;h3&gt;Generate your own site&lt;/h3&gt;
&lt;p&gt;By default, Maverick searches all &lt;code&gt;.md&lt;/code&gt; files recursively under &lt;code&gt;test_src&lt;/code&gt; folder, so put your Markdown files in it and run &lt;code&gt;python ./build.py&lt;/code&gt; then everything you need will be in &lt;code&gt;test_dist&lt;/code&gt; folder. Maverick uses so-called &lt;code&gt;YAML frontmatter&lt;/code&gt; to get meta data of your articles, if you have tried Hexo or Jekyll, you should be familiar with it; if you don't, let's look into it now.&lt;/p&gt;
&lt;p&gt;......&lt;/p&gt;
&lt;p&gt;Read the full documentation &lt;a href="https://github.com/AlanDecode/Maverick"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;License&lt;/h2&gt;
&lt;p&gt;MIT © &lt;a href="https://github.com/AlanDecode"&gt;AlanDecode&lt;/a&gt;.&lt;/p&gt;
</content><link href="/Blog-With-GitHub-Boilerplate/archives/194/" rel="alternate"/><published>2019-12-11T22:23:00+08:06</published></entry><entry><id>/Blog-With-GitHub-Boilerplate/archives/typography/</id><title>Hello World!</title><updated>2020-01-04T12:07:34.823624+00:00</updated><author><name>AlanDecode</name><email>hi@imalan.cn</email><uri>https://www.imalan.cn</uri></author><content>&lt;div class="notice"&gt;这是一篇示例文章，在这里你可以看到常用页面元素的显示效果，同时也是 Markdown 语法的参考文章。保留或者删除本文，开始自己的创作吧！&lt;/div&gt;&lt;h2&gt;L2 Heading&lt;/h2&gt;
&lt;h3&gt;L3 Heading&lt;/h3&gt;
&lt;h4&gt;L4 Heading&lt;/h4&gt;
&lt;h5&gt;L5 Heading&lt;/h5&gt;
&lt;h6&gt;L6 Heading&lt;/h6&gt;
&lt;h2&gt;Paragraph&lt;/h2&gt;
&lt;p&gt;We are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.&lt;/p&gt;
&lt;p&gt;We are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.&lt;/p&gt;
&lt;h2&gt;Inline elements&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Bold&lt;/strong&gt;, &lt;ruby&gt;Ruby&lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;ルビ&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;&lt;/ruby&gt;, &lt;em&gt;Italic&lt;/em&gt;, &lt;del&gt;Strikethrough&lt;/del&gt;, &lt;a href="https://www.imalan.cn"&gt;Link&lt;/a&gt;&lt;sup id="fn_ref_1"&gt;&lt;a href="#fn_1"&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;h2&gt;Blockquote and nested blockquote&lt;/h2&gt;
&lt;blockquote&gt;&lt;p&gt;安得广厦千万间，大庇天下寒士俱欢颜！风雨不动安如山。&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;呜呼！何时眼前突兀见此屋，吾庐独破受冻死亦足！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2&gt;Code&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;int a=1;&lt;/code&gt;. Code block:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;std&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Hello World!&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;List&lt;/h2&gt;
&lt;h3&gt;Unordered List&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;iPhone&lt;ul&gt;
&lt;li&gt;iPhone X&lt;/li&gt;
&lt;li&gt;iPhone 11&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;iPad&lt;/li&gt;
&lt;li&gt;MacBook&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ordered List&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打开冰箱&lt;ol&gt;
&lt;li&gt;右手放在冰箱门拉手上&lt;/li&gt;
&lt;li&gt;左手扶住冰箱主体&lt;/li&gt;
&lt;li&gt;右手向后用力&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;把大象放进冰箱&lt;/li&gt;
&lt;li&gt;关上冰箱&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Horizontal rule&lt;/h2&gt;
&lt;hr&gt;
&lt;h2&gt;Math&lt;/h2&gt;
&lt;p&gt;Inline Math: $m\times n$, math block:&lt;/p&gt;
&lt;p&gt;$$C_{m\times k}=A_{m\times n}\cdot B_{n\times k}$$&lt;/p&gt;
&lt;h2&gt;Figures&lt;/h2&gt;
&lt;h3&gt;Single figure&lt;/h3&gt;
&lt;p&gt;&lt;figure class="pswp-item" style="flex: 92.88888888888889" data-width="836" data-height="450"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/Cloudifold/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/e0affbc80ccb2d596c87b520e37e7071.jpg" alt="Princess Mononoke" /&gt;&lt;figcaption&gt;Princess Mononoke&lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3&gt;Photoset&lt;/h3&gt;
&lt;div class="photos"&gt;
&lt;figure class="pswp-item" style="flex: 75.0" data-width="4032" data-height="2688"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/Cloudifold/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/4956a144888cdbbb6c2df1d1d15384b0.jpeg" alt="" /&gt;&lt;/figure&gt;
&lt;figure class="pswp-item" style="flex: 50.03720238095238" data-width="2690" data-height="2688"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/Cloudifold/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/4c66f0da616b08325b3aaa4c8b3f68e1.jpg" alt="" /&gt;&lt;/figure&gt;
&lt;figure class="pswp-item" style="flex: 75.0" data-width="4032" data-height="2688"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/Cloudifold/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/8b4d2334469ffa39b59e6fdb37c8c601.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/div&gt;&lt;div class="photos"&gt;
&lt;figure class="pswp-item" style="flex: 75.0" data-width="4032" data-height="2688"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/Cloudifold/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/0f5023d542a33e7c9d270f3cd6a99562.jpeg" alt="" /&gt;&lt;/figure&gt;
&lt;figure class="pswp-item" style="flex: 75.0" data-width="4032" data-height="2688"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/Cloudifold/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/20ec69d2a0276336f95e11f42866d17f.jpeg" alt="" /&gt;&lt;/figure&gt;
&lt;figure class="pswp-item" style="flex: 75.0" data-width="4032" data-height="2688"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/Cloudifold/Blog-With-GitHub-Boilerplate@gh-pages/archives/assets/2b8af25285e5a193729a350593113bad.jpeg" alt="" /&gt;&lt;/figure&gt;&lt;/div&gt;&lt;h2&gt;Table&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;&lt;tr&gt;
&lt;th&gt;header&lt;/th&gt;
&lt;th&gt;header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;cell 1&lt;/td&gt;
&lt;td&gt;cell 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cell 3&lt;/td&gt;
&lt;td&gt;cell 4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Link Card&lt;/h2&gt;
&lt;div class="links"&gt;
&lt;a style="display:block" target="_blank" href="https://www.imalan.cn" class="board-item"&gt;                 &lt;div class="board-thumb"&gt;&lt;img src="https://secure.gravatar.com/avatar/1741a6eef5c824899e347e4afcbaa75d?s=200&amp;r=G&amp;d="&gt;&lt;/div&gt;                 &lt;div class="board-title"&gt;AlanDecode&lt;/div&gt;&lt;/a&gt;&lt;/div&gt;&lt;hr&gt;&lt;div class="footnotes"&gt;&lt;ol&gt;&lt;li id="fn_1"&gt;Home page for AlanDecode &lt;a no-style href="#fn_ref_1"&gt;↩&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</content><link href="/Blog-With-GitHub-Boilerplate/archives/typography/" rel="alternate"/><published>2019-12-18T16:50:00+08:06</published></entry></feed>